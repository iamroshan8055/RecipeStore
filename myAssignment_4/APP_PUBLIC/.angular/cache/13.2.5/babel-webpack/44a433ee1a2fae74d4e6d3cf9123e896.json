{"ast":null,"code":"import { RecipeServiceService } from \"../recipe-service.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../recipe-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction AddReviewsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.formError, \" \");\n  }\n}\n\nexport let AddReviewsComponent = /*#__PURE__*/(() => {\n  class AddReviewsComponent {\n    // constructor() {  }\n    constructor(recipeService, router, route) {\n      this.recipeService = recipeService;\n      this.router = router;\n      this.route = route;\n      this.recipeid = this.route.snapshot.paramMap.get('recipeid');\n      this.newReviews = {\n        _id: '',\n        user_name: '',\n        rating: 5,\n        reviewText: ''\n      };\n      this.formError = '';\n    }\n\n    ngOnInit() {}\n\n    onReviewSubmit() {\n      this.formError = '';\n\n      if (this.isFormValid()) {\n        this.recipeService.addReviewToRecipe(this.recipeid, this.newReviews).then(addReviews => {\n          if (addReviews) {\n            this.router.navigate(['/recipes/' + this.recipeid]);\n          } else {\n            this.formError = 'Ops, something wrong happened. Tryagain later';\n            console.log(\"Ops, something wrong happened. Tryagain later\");\n          }\n        });\n      } else {\n        this.formError = 'All fields are required. Please, try again.';\n        console.log(\"All fields are required. Please, try again.\");\n      }\n    }\n\n    isFormValid() {\n      if (this.newReviews.user_name && this.newReviews.rating && this.newReviews.reviewText) return true;\n      return false;\n    }\n\n  }\n\n  AddReviewsComponent.ɵfac = function AddReviewsComponent_Factory(t) {\n    return new (t || AddReviewsComponent)(i0.ɵɵdirectiveInject(i1.RecipeServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  AddReviewsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddReviewsComponent,\n    selectors: [[\"app-add-reviews\"]],\n    features: [i0.ɵɵProvidersFeature([RecipeServiceService])],\n    decls: 32,\n    vars: 4,\n    consts: [[\"action\", \"\", \"method\", \"post\", \"role\", \"form\", 3, \"ngSubmit\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"data-role\", \"fieldcontain\", 1, \"form-group\"], [\"data-role\", \"controlgroup\"], [\"for\", \"user_name\"], [\"id\", \"user_name\", \"type\", \"text\", \"value\", \"\", \"placeholder\", \"Enter Your Name\", \"name\", \"user_name\", 1, \"form-control\", \"fnt_crsv\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"rating\"], [\"id\", \"rating\", \"type\", \"number\", \"min\", \"0\", \"max\", \"5\", \"value\", \"\", \"name\", \"rating\", 1, \"form-control\", \"fnt_crsv\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"reviewText\"], [\"id\", \"reviewText\", \"type\", \"text\", \"value\", \"\", \"placeholder\", \"How much you liked our recipe?\", \"name\", \"reviewText\", 1, \"form-control\", \"fnt_crsv\", 3, \"ngModel\", \"ngModelChange\"], [\"data-role\", \"fieldcontain\"], [\"type\", \"submit\", \"value\", \"Add Review\", \"data-transition\", \"fade\", \"data-theme\", \"c\", 1, \"btn\", \"btn-primary\", \"fnt_crsv\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function AddReviewsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddReviewsComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onReviewSubmit();\n        });\n        i0.ɵɵtemplate(1, AddReviewsComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\");\n        i0.ɵɵelement(5, \"div\", 2);\n        i0.ɵɵelementStart(6, \"fieldset\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"User Name\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\")(10, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddReviewsComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.newReviews.user_name = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"tr\")(12, \"td\");\n        i0.ɵɵelement(13, \"div\", 2);\n        i0.ɵɵelementStart(14, \"fieldset\", 3)(15, \"label\", 6);\n        i0.ɵɵtext(16, \"Rating\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"td\")(18, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddReviewsComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.newReviews.rating = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"tr\")(20, \"td\");\n        i0.ɵɵelement(21, \"div\", 2);\n        i0.ɵɵelementStart(22, \"fieldset\", 3)(23, \"label\", 8);\n        i0.ɵɵtext(24, \"Text Review\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"td\")(26, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddReviewsComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.newReviews.reviewText = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"tr\")(28, \"td\");\n        i0.ɵɵelement(29, \"div\", 10)(30, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"td\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formError);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.newReviews.user_name);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.newReviews.rating);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.newReviews.reviewText);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.MinValidator, i3.MaxValidator, i3.NumberValueAccessor],\n    styles: [\"\"]\n  });\n  return AddReviewsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}